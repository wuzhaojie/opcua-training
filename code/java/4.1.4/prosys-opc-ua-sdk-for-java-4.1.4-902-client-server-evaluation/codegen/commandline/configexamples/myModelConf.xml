<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<codegenConfiguration>

	<!-- Mapping of UA Namespace -> Java package -->
	<namespaceMappings>
		<!-- Add mapping to your model(s) namespace(s) here -->
		<!-- Each mapping must have unique java package name -->
		<namespaceMapping>
			<uri>http://yourorganisation.org/myModel/</uri>
			<packageName>example.myModel</packageName>
		</namespaceMapping>
	</namespaceMappings>

	<!-- Defines where models are loaded from. Use absolute paths, 'app.home' 
		is set by the launcher scripts to parent directory of the launch scripts 
		and can be used to make relative paths. Entries can be files or folders. 
		All xml files from the folder are assumed to be model files -->
	<modelSources>
		<modelSource>${app.home}/models</modelSource>
	</modelSources>

	<!-- These define which namespace should be generated and which targets 
		to use. See the Codegen Manual about the possible Generation Targets. -->
	<generates>
		<!-- Multiple generate blocks are possible -->
		<generate>
			<targets>all</targets>
			<uris>
				<!-- Multiple uris possible -->
				<uri>http://yourorganisation.org/myModel/</uri>
			</uris>
			<outputs>
				<code>${app.home}/mymodel/output_code</code>
				<resources>${app.home}/mymodel/output_resources</resources>
			</outputs>
		</generate>
	</generates>

	<enhancements>
		<!-- Optionally define a header to generate for each file. Every line is 
			prepended with '//'. -->
		<fileHeader>
			<line>Generated from SampleTypes</line>
			<line>by Prosys OPC UA Java SDK Codegen</line>
		</fileHeader>
	</enhancements>
</codegenConfiguration>
